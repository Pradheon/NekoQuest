import os, sys
import pygame
pygame.init()

#This sets the screen
size = width, height = 1280, 720
screen = pygame.display.set_mode(size)
pygame.mouse.set_visible(0)
pygame.display.set_caption('Nekopara Minigame')

#Background
background = pygame.Surface(screen.get_size())
background = background.convert()
background.fill((240, 216, 172))

#Display background
screen.blit(background, (0, 0))
pygame.display.flip()

#This loads images
logo = pygame.image.load(os.path.join("images", "logo.png"))
bgLvl = pygame.image.load(os.path.join("images", "bg lvl.png"))
bgMain = pygame.image.load(os.path.join("images", "bg main.png"))
bgStart = pygame.image.load(os.path.join("images", "bg start.png"))
chibiCho = pygame.image.load(os.path.join("images", "chibi cho.png"))
chibiVan = pygame.image.load(os.path.join("images", "chibi van.png"))
choCasual = pygame.image.load(os.path.join("images", "cho casual.png"))
chibiShi = pygame.image.load(os.path.join("images", "chibi shi.png"))


#This is the code
while True:
    class Cursor(pygame.sprite.Sprite):
        def __init__(self):
            pygame.sprite.Sprite.__init__(self)
            self.image, self.rect = load_image("chibi shi.png", -1)
            self.meow = 0

        def update(self):
            pos = pygame.mouse.get_pos()
            self.rect.midtop = pos
            if self.meow:
                self.rect.move
    class chr1(pygame.sprite.Sprite):
        def __init__(self):
            pygame.sprite.Sprite.__init__(self)
            self.image, self.rect = load_image(chibiCho, -1)
            screen = pygame.display.get_surface()
            self.area =  screen.get_rect()
            self.rect.topleft = 10, 10
            self.move = 9
            self.dizzy = 0

        def update(self):
            if self.dizzy:
                self._spin()
            else:
                self._walk()

        def _walk(self):
            newpos = self.rect.move((self.move, 0))
            if not self,area.contains(newpos):
                if self.rect.left < self.area.left or \
                   self.rect.right > self.area.right:
                    self.move = -self.move
                    newpos = self.rect.move((self.move, 0 ))
                    self.image = pygame.transform.flip(self.image, 1, 0)
                self.rect = newpos
